<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=Edge;chrome=1" />
    <title>Node.js PPT - zfkun</title>


    <link href="css/default.css" class="theme" rel="stylesheet" media="screen"  />
    <link href="css/common.css" rel="stylesheet" media="screen" />
  </head>
  <body>
    <nav id="helpers">
      <button title="Previous slide" id="nav-prev" class="nav-prev">⇽</button> 
      <button title="Jump to a random slide" id="slide-no">5</button> 
      <button title="Next slide" id="nav-next" class="nav-next">⇾</button>
      <menu>
        <button type="checkbox" data-command="toc" title="Table of Contents" class="toc">TOC</button>
        <!-- <button type="checkbox" data-command="resources" title="View Related Resources">☆</button> -->
        <button type="checkbox" data-command="notes" title="View Slide Notes">✏</button>
        <button type="checkbox" data-command="source" title="View slide source">↻</button>
        <button type="checkbox" data-command="help" title="View Help">?</button>
      </menu>
    </nav>
    <div class="presentation">
      <div id="presentation-counter">Loading...</div>
      <div class="slides">
        <div class="slide" id="landing-slide">
          <style>
            #landing-slide p {
              font-size: 35px;
            }
            p#disclaimer-message {
              font-size: 20px;
            }
          </style>
          <section class="middle">
            <p>NodeJS (Server-Side JavaScript)</p>
            <p>Press <span id="left-init-key" class="key">&rarr;</span> key to continue.</p>
            <p id="disclaimer-message">zfkun&lt;zfkun@msn.com&gt;</p>
          </section>
          <aside class="note">
            <section>
	    随着互联网技术的不断发展，Web系统的分层也日益增多，传统的阻塞多进程/线程模式已不能很好的支持如今大并发访问场景。<br/>
	    然后就算在现有的C/Java下进行非阻塞模式的开发也略显复杂。<br/>
	    在此情景下Node技术应时而生，结合了非阻塞模式与JavaScript的事件机制，在功能、性能以及开发成本上找到了一个较好的平衡点<br/>
            </section>
          </aside> 
        </div>

        <div class="slide" id="controls-slide">
          <header>PPT Controls</header>
          <style>
            #controls-slide li, #controls-slide p {
              font-size: 32px;
            }
            #controls-slide .key {
              bottom: 2px;
            }
          </style>
          <section>
            <ul>
              <li><span class="key">&larr;</span> and <span class="key">&rarr;</span> to move around.</li>
              <li><span class="key">Ctrl/Command</span> and <span class="key">+</span> or <span class="key">-</span> to zoom in and out if slides don’t fit.</li>
              <li><span class="key">S</span> to view page source.</li>
              <li><span class="key">T</span> to change the theme.</li>
              <li><span class="key">H</span> to toggle syntax highlight.</li>
              <li><span class="key">N</span> to toggle speaker notes.</li>
              <li><span class="key">3</span> to toggle 3D effect.</li>
              <li><span class="key">0</span> to toggle help.</li>
            </ul>
          </section>
        </div>


	<div class="slide" id="table-of-contents">
          <header><h1>Today, we will cover...</h1></header>
          <style>
            #toc-list > li {
              font-size: 26px;
              line-height: 33px;
              opacity: 0.85;
            }
            #toc-list > li:hover {
              opacity: 1;
            }
            #toc-list a {
              border-bottom: 0;
            }
            #toc-list a:hover{
              border-bottom: 2px solid #3f3f3f;
            }
            #toc-list img {
              vertical-align: middle;
              margin-left: 15px;
            }
          </style>
          <section>
            <ul id="toc-list">
            </ul>
          </section>
        </div>

	<div class="slide transitionSlide" id="server-side-js">
          <header><h1>Server-Side JavaScript</h1></header>
          <section>
            <ul class="bullets">
              <li>A: What? Are you kidding me?</li>
              <li>M: Yes, I did not joke. It's true.</li>
	      <li>A: ....#$%^&$*%(#)(**&^^%$</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="traditional-notion">
          <header><h1>传统观念下的JavaScript</h1></header>
          <section>
            <ul class="bullets">
              <li>Live in Browser</li>
              <li>Service for Browser</li>
	      <li>Just Script</li>
	      <li>....</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="traditional-notion-why">
          <header><h1>Why ?</h1></header>
          <section>
            <ul class="bullets">
              <li>Use effects</li>
              <li>DOM(Document Object Model) operating</li>
	      <li>Cookie R/W</li>
	      <li>AJAX(Asynchronous JavaScript and XML) - 1998(Outlook Web Access) ~ 2005(Google)</li>
	      <li>....</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="see-ssj-now">
          <header><h1>See Server-Side JavaScript</h1></header>
          <section>
            <ul class="bullets">
              <li>Front/Backround both ok</li>
              <li>No JavaScript support Browser</li>
	      <li>....</li>
            </ul>
          </section>
        </div>

	<div class="slide transitionSlide" id="ssj-pioneer">
          <header><h1>Pioneers</h1></header>
          <section>
            <ul class="bullets">
              <li>Jaxer (Aptana)<img src="/images/jaxer-logo-icon.png" /></li>
              <li>Helm (Rhino)</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-jaxer">
          <header><h1>Aptana Jaxer</h1></header>
          <section>
            <ul class="bullets">
              <li>Apache Httpd</li>
	      <li>Mozilla SpiderMonkey</li>
              <li>"The World first"</li>
	      <li>Once code, run everywehre</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-helm">
          <header><h1>Helm (Rhino)</h1></header>
          <section>
            <ul class="bullets">
              <li>RingoJS(Mozilla Rhino) - JavaScript Run Env by Java</li>
	      <li>"12 years"</li>
              <li>Java</li>
	      <li>App Server</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-problem">
          <header><h1>But, Problems</h1></header>
          <section>
            <ul class="bullets">
              <li>Just for WEB,</li>
	      <li>Uniform standards</li>
              <li>
	      ecosystem (acitive)<pre>Python(PyPI), Ruby, Perl<br/>e. mobile -> android / ios</pre>
	      </li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-problem-revelution">
          <header><h1>Then, Revelutions in 2009</h1></header>
          <section>
            <ul class="bullets">
              <li>CommonJS(ServerJS), by Kevin Dangoor</li>
	      <li>JSConf, by Chris Williams & Iterative Designs</li>
              <li>Node, by Ray Dahl</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-problem-revelution-commonjs">
	  <style>.f22 {font-size: 22px;}</style>
          <header><h1>CommonJS(ServerJS)</h1></header>
          <section>
            <ul class="bullets f22">
              <li>JavaScript社区意识到需要作出一些改变了</li>
	      <li>Kevin Dangoor博客中说:<pre>虽然JavaScript是一种很流行的语言,但却没有形成标准的库和API,<br/>也没对外部库进行打包和制定统一的调用方法。<br/>由于没有通用的API,每个服务端的JavaScript项目不得不各自为政,<br/>这不利于跨项目的库和工具形成一个更庞杂的JavaScript生态圈</pre></li>
              <li>因此Dangoor启动了ServerJS项目</li>
	      <li>其宗旨是制定一个大型的、可兼容的JavaScript生态圈所需的API</li>
	      <li>推出一周后内,ServerJS小组就有了224名成员,邮件列表里也有了653条信息</li>
	      <li>显然,Dangoor已经引起了开发人员的注意</li>
	      <li>该项目后来改名CommonJS,以更好地反映其团结JavaScript社区、为浏览器端和服务器端制定统一API的这一伟大目标</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-problem-revelution-jsconf">
          <header><h1>JSConf</h1></header>
          <section>
            <ul class="bullets">
	      <li>以JavaScript为议题的会议开始出现</li>
              <li>Chris Williams 和 Iterative Designs 创立了JSConf,这是JavaScript开发者的第一个专业会议</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="ssj-pioneer-problem-revelution-node">
	  <style>.f22 {font-size: 22px;}</style>
          <header><h1>Node</h1></header>
          <section>
            <ul class="bullets f22">
	      <li>2009.1启动了Node项目</li>
	      <li>2010.11的柏林JSConf上的演说 (<a href="http://s3.amazonaws.com/four.livejournal/20091117/jsconf.pdf" target="_blank">PPT</a>)</li>
              <li>2009.1  - 2009.2 - 2009.5(0.0.1) - .... - 2011.8(0.4.10)</li>
	      <li>官方WIKI上 700+ module</li>
	      <li>Upgrade everyday</li>
            </ul>
          </section>
        </div>


	<div class="slide transitionSlide" id="nodejs-title">
          <style>.fs50{font-size:50px;}</style>
	  <section class="middle">
            <h2 class="fs50">NodeJS</h2>
            <p>Evented I/O for V8 JavaScript.</p>
	    <p>Node's goal is to provide an easy way to build scalable network programs</p>
            <img src="http://www.nodejs.org/logo.png" width=420 height=111 style="opacity:1;" title="NodeJS" alt="NodeJS">
          </section>
        </div>

	<div class="slide" id="nodejs-implement">
          <header><h1>NodeJS Implement</h1></header>
          <section>
            <ul class="bullets">
	      <li>Server-Side JavaScript</li>
	      <li>CommonJS Module</li>
	      <li>Single Thread</li>
	      <li>V8</li>
              <li>Event Based</li>
	      <li>Non-blocking I/O</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="nodejs-base-lib">
          <header><h1>NodeJS Base lib</h1></header>
          <section>
            <ul class="bullets">
	      <li>libev (event loop)</li>
	      <li>libeio (nonblocked posix, thread pool)</li>
	      <li>v8 (javascript engine)</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="nodejs-single-thread">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS Single-Thread</h1></header>
          <section>
            <ul class="bullets fs22">
	      <li>
	      Advantage
	      <pre>程序逻辑简单<br/>系统资源占用低<br/>性能高(避免了通信及锁的使用开销)</pre>
	      </li>
	      <li>
	      Shortcoming
	      <pre>一个程序一个CPU (Web Worker)<br/>程序异常将导致整个进程崩溃退出</pre>
	      </li>
            </ul>
          </section>
        </div>

	<div class="slide" id="nodejs-non-blocking">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS Non-blocking</h1></header>
          <section>
            <ul class="bullets fs22">
	      <li>
	      Blocking
	      <pre class="prettyprint">echo 'hello';<br/>sleep(1);<br/>echo 'world';</pre>
	      </li>
	      <li>
	      Non-blocking
	      <pre class="prettyprint">setTimeout(function(){
            console.info('world');
         }, 1000);<br/>console.info('hello');</pre>
	      </li>
            </ul>
          </section>
        </div>

	<div class="slide" id="nodejs-event-base">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS Event Base</h1></header>
          <section>
            <ul class="bullets fs22">
	      <li>Normal<pre class="prettyprint">var result = db.query("select ...");</pre></li>
	      <li>Node<pre class="prettyprint">db.query("select..", function (result) {
         // use result
     });</pre></li>
	      <li>这种基于事件的模型更能有效的利用CPU和内存,同时其可扩展性也更好。</li>
	      <li>与多进程或者多线程程序相比,基于事件的框架可以事半功倍</li>
            </ul>
          </section>
        </div>

	<div class="slide" id="nodejs-commonjs">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS CommonJS</h1></header>
          <section>
            <ul class="bullets fs22">
	      <li>JavaScript Everywhere, CommonJS is an API</li>
	      <li>为Web服务器, 桌面和命令行应用创建一个完整的 JavaScript 生态系统，<br/>不仅仅只为浏览器，还可以更多</li>
	      <li>定义了一组标准和规范，如模块、包、文件系统等(服务端 JavaScript 标准)</li>
	      <li>模块和包很像 Java 的动态模块化系统 OSGi</li>
            </ul>
          </section>
        </div>

	<div class="slide transitionSlide" id="nodejs-advantage">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS Advantage</h1></header>
          <section>
            <ul class="bullets fs22">
	      <li>SSJS no cross-browser problem</li>
	      <li>DOM,BOM very well</li>
	      <li>JS Lib & Framework became Middleware</li>
	      <li>JS Code from client to server is so easy</li>
	      <li>...</li>
            </ul>
          </section>
          <aside class="note">
            <section>
	    性能测试:<br/>
         ADM Opteron 2200 单核, 4G RAM<br/>
         socket client 20,000+ qps<br/>
         socket server 17,000 qps<br/>
         http server 4,400 qps<br/>
         mem useage  30 ~ 40m<br/>
         <a href="http://nodejs.kongwu.net/blog/?p=8" target="_blank">http://nodejs.kongwu.net/blog/?p=8</a>
            </section>
          </aside>
        </div>

	<div class="slide transitionSlide" id="nodejs-shortcoming">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS Shortcoming</h1></header>
          <section>
	  <ul>
	  <li>诞生不久，热部署，调试, 更新极快</li>
	  <li>SSL支持不成熟</li>
	  <li>Windows下问题相对较多（改善中, 0.5.3）</li>
	  <li>1G heap限制(by V8)</li>
	  </ul>
	  </section>
          <aside class="note">
            <section>
            </section>
          </aside>
        </div>

	<div class="slide transitionSlide" id="nodejs-suit-for">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>Suit for ?</h1></header>
          <section>
	  <ul>
	  <li>Web Socket</li>
	  <li>Web Comet</li>
	  <li>High concurrency-load middleware</li>
	  <li>Simple Spider</li>
	  </ul>
	  </section>
          <aside class="note">
            <section>
            </section>
          </aside>
        </div>

	<div class="slide transitionSlide" id="nodejs-install">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>NodeJS Install</h1></header>
          <section>
            <pre>
$ git clone git://github.com/ry/node.git
$ cd node
$ ./configure
$ make
$ make install (sudo make install)
	    </pre>
          </section>
          <aside class="note">
            <section>
            </section>
          </aside>
        </div>

	<div class="slide transitionSlide" id="nodejs-demo-show">
          <style>.fs22{font-size:22px;}</style>
          <header><h1>Some Demos</h1></header>
          <section>
	  <ul>
	  <li>Hello World - <a href="http://192.168.3.129:2999" target="_blank">view</a></li>
	  <li>TCP Server - <a href="http://192.168.3.129:3001" target="_blank">view</a></li>
	  <li>File Explorer - <a href="http://192.168.3.129:3006" target="_blank">view</a></li>
      <li>Static File Server - <a href="http://192.168.3.129:3007" target="_blank">view</a></li>
      <li>Real-time Monitor - <a href="http://192.168.3.129:3003/sysinfo.html" target="_blank">view</a></li>
	  <li>Chat - <a href="http://192.168.3.129:3002" target="_blank">view</a></li>
	  <li>PPT - <a href="http://192.168.3.129/ppt" target="_blank">view</a> - <a href="http://192.168.3.129/controller" target="_blank">controller</a></li>
	  <li>more - <a href="https://github.com/joyent/node/wiki/Projects,-Applications,-and-Companies-Using-Node" target="_blank">view</a></li>
	  </ul>
	  </section>
          <aside class="note">
            <section>
            </section>
          </aside>
        </div>

	<div class="slide transitionSlide" id="nodejs-links">
          <header><h1>Links</h1></header>
          <section>
	  <ul>
	  <li><a href="http://www.commonjs.org/" target="_blank">http://www.commonjs.org/</a></li>
	  <li><a href="http://nodejs.org/" target="_blank">http://nodejs.org/</a></li>
	  <li><a href="https://github.com/isaacs/npm" target="_blank">https://github.com/isaacs/npm</a></li>
	  <li><a href="https://github.com/ry/node/wiki" target="_blank">https://github.com/ry/node/wiki</a></li>
	  <li><a href="https://github.com/ry/node/wiki/modules" target="_blank">https://github.com/ry/node/wiki/modules</a></li>
	  <li><a href="http://www.cloud9ide.com/" target="_blank">http://www.cloud9ide.com/</a></li>
	  </ul>
	  </section>
          <aside class="note">
            <section>
            </section>
          </aside>
        </div>

	<div class="slide" id="nodejs-qa">
          <style>
            #nodejs-qa p {
              font-size: 35px;
            }
            p span {
              font-size: 20px;
            }
          </style>
          <section class="middle">
            <p>Q & A</p>
            <p><span>Thanks!!</span></p>
          </section>
          <aside class="note">
            <section></section>
          </aside>
        </div>
   

      </div> <!-- slides -->
      <div id="speaker-note" class="invisible" style="display: none;">
      </div> <!-- speaker note -->
      <aside id="help" class="sidebar invisible" style="display: hidden;">
        <table>
          <caption>Help</caption>
          <tbody>
            <tr>
              <th>Move Around</th>
              <td>&larr;&nbsp;&rarr;</td>
            </tr>
            <tr>
              <th>Source File</th>
              <td>s</td>
            </tr>
            <tr>
              <th>Change Theme</th>
              <td>t</td>
            </tr>
            <tr>
              <th>Syntax Highlight</th>
              <td>h</td>
            </tr>
            <tr>
              <th>Speaker Notes</th>
              <td>n</td>
            </tr>
            <tr>
              <th>Toggle 3D</th>
              <td>3</td>
            </tr>
            <tr>
              <th>Help</th>
              <td>0</td>
            </tr>
          </tbody>
        </table>
      </aside>
    </div> <!-- presentation -->

    
    <script src="/socket.io/socket.io.js"></script>
    
    <script src="js/utils2.js"></script>
    <script>
      // Check if new appcache is available, load it, and reload page.
      if (window.applicationCache) {
        window.applicationCache.addEventListener('updateready', function(e) {
          if (window.applicationCache.status == window.applicationCache.UPDATEREADY) {
            window.applicationCache.swapCache();
            if (confirm('A new version of this site is available. Load it?')) {
              window.location.reload();
            }
          }
        }, false);
      }
    </script>
  </body>
</html>
